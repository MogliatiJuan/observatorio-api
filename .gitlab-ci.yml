image: ubuntu:latest

variables:
  DOCKER_HOST: tcp://thedockerhost:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  PROYECTO: observatorio_api
  PORT_EXT: 3000
  PORT_INT: 3000

  IMAGEN: $SERVER_REGISTRY/$PROYECTO:$CI_COMMIT_SHORT_SHA
  IMAGENNOTSHA: $SERVER_REGISTRY/$PROYECTO
stages:
    - buildpush
    - stopcontainer
    - borrarimagen
    - deploy
    
buildpush:  
  stage: buildpush
  image: docker:latest
  services:
  - name: docker:dind
    alias: thedockerhost
  script:
    - docker build -t $IMAGEN .
    - docker push $IMAGEN  
    - echo $IMAGEN 
  only:
      - master 

stopcontainer:
  stage: stopcontainer
  before_script:
    - apt-get update
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY_PRODUCTION")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - echo ">>> PRUNE CONTAINERS <<<"
    - ssh $SERVER_PRO_USER@$SERVER_PRO "docker ps -a && docker rm -f $PROYECTO && docker ps -a"
  only:
      - master  

borrarimagen:
  stage: borrarimagen
  # Si no encuentrra ninguna imagen que exista en el servidor remoto con el nombre del repositorio. falla. con esto permitimos que continue al siguiente stage
  allow_failure: true
  variables:
    CMD_BORRAR: ssh $SERVER_PRO_USER@$SERVER_PRO docker rmi $(docker images -q $IMAGENNOTSHA)    
  before_script:
    - apt-get update
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY_PRODUCTION")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - echo "*** test BORRANDO IMAGEN >>> $IMAGENNOTSHA ***"
    - $CMD_BORRAR
    - ssh $SERVER_PRO_USER@$SERVER_PRO "docker image ls"
  only:
      - master  


# CORREGIR EL HASH <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
deploy:
  stage: deploy
  before_script:
    - apt-get update
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY_PRODUCTION")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - echo "aca deploy otra vez<<<<<<<<<<<<<<<<<"
    - echo $IMAGEN 
    - ssh $SERVER_PRO_USER@$SERVER_PRO "docker run -d -p $PORT_EXT:$PORT_INT --name $PROYECTO $IMAGEN"
  only:
      - master    



